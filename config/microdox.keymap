
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NAV     1
#define OTH     2

#define TAPPING_TERM 200
#define QUICK_TAP    100

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    timeout-ms = <25>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

/ {

    combos {
                compatible = "zmk,combos";

                /* Additional Nav */     
                COMBO(escape, &kp ESC, 0 1, DEFAULT) 
                COMBO(tab, &kp TAB, 1 2, DEFAULT) 
                COMBO(page_up, &kp PAGE_UP, 2 3, DEFAULT) 
                COMBO(page_down, &kp PAGE_DOWN, 3 4, DEFAULT) 

                 /* Column 0-9,10-19 Numrow Symbol */
                COMBO(exclamation,&kp EXCL, 0 10, DEFAULT) 
                COMBO(alias,&kp AT, 1 11, DEFAULT)
                COMBO(hash,&kp HASH, 2 12, DEFAULT) 
                COMBO(dollar,&kp DOLLAR, 3 13, DEFAULT) 
                COMBO(percent,&kp PERCENT, 4 14, DEFAULT) 
                COMBO(caret,&kp CARET, 5 15, DEFAULT) 
                COMBO(ampersand,&kp AMPS, 6 16, DEFAULT) 
                COMBO(asterisk,&kp ASTRK, 7 17, DEFAULT) 
                COMBO(leftpar,&kp LPAR, 8 18, DEFAULT) 
                COMBO(rightpar,&kp RPAR, 9 19, DEFAULT) 

                 /* Column 10-19,20-29 Function Row*/
                COMBO(f1,&kp F1, 10 20, DEFAULT) 
                COMBO(f2,&kp F2, 11 21, DEFAULT)
                COMBO(f3,&kp F3, 12 22, DEFAULT) 
                COMBO(f4,&kp F4, 13 23, DEFAULT) 
                COMBO(f5,&kp F5, 14 24, DEFAULT) 
                COMBO(f6,&kp F6, 15 25, DEFAULT) 
                COMBO(f7,&kp F7, 16 26, DEFAULT) 
                COMBO(f8,&kp F8, 17 27, DEFAULT) 
                COMBO(f9,&kp F9, 18 28, DEFAULT) 
                COMBO(f10,&kp F10, 19 29, DEFAULT) 

                /* Bluetooth */
                COMBO(btclr,&bt BT_CLR, 0 9, DEFAULT)
                COMBO(btsel1,&bt BT_SEL 0, 10 19, DEFAULT) 
                COMBO(btsel2,&bt BT_SEL 4, 20 29, DEFAULT) 

                /* Lock Layer */
                COMBO(lock,&tog OTH, 4 5, DEFAULT) 
                COMBO(unlock,&tog DEFAULT, 4 5, OTH)
                
                            
        };

};

/*          35 KEY MATRIX / LAYOUT MAPPING
// | 0  | 1  | 2  | 3  | 4  |       | 5  | 6  | 7  | 8  | 9 |
// | 10 | 11 | 12 | 13 | 14 |       | 15 | 16 | 17 | 18 | 19 |
// | 20 | 21 | 22 | 23 | 24 |       | 25 | 26 | 27 | 28 | 29 |
//            | 30 | 31 | 32 |     | 33 | 34 | 35 |
*/


/ {

    behaviors {
        hm: layer_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp Q        &kp W         &kp E         &kp R         &kp T                &kp Y        &kp U        &kp I         &kp O        &kp P
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &hm LGUI A   &hm LALT S    &hm LSHFT D   &hm LCTRL F   &kp G                &kp H      &hm RCTRL J   &hm RSHFT K    &hm RALT L   &hm RGUI APOS
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp Z        &kp X         &kp C         &kp V         &kp B                &kp N        &kp M        &kp COMMA     &kp DOT      &kp FSLH
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &trans        &mo NAV       &kp BSPC                          &kp SPACE                &lt OTH ENTER   &kp A
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "Navigation";

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp LC(X)    &kp LC(C)     &kp LC(V)     &kp LC(A)    &kp PSCRN            &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp INS       &kp DEL
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp HOME     &kp END       &kp EQUAL     &kp MINUS    &kp UNDER            &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp SEMI      &kp BSLH
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp LC(Z)    &kp LPAR      &kp RPAR      &kp LBKT     &kp RBKT             &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp LA(LG(R)) &kp C_MUTE
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &trans        &trans        &caps_word                            &kp KP_NUM            &kp KP_N0     &trans 
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
               >;
        };

        oth_layer {
            label = "Other";

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &none        &none         &none         &none         &none              &none       &none       &none         &none       &none
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none        &none         &none         &none         &none              &none       &none       &none         &none       &none 
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none        &none         &none         &none         &none              &none       &none       &none         &none       &none 
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &none         &none         &none                            &none                    &none         &none 
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
                >; 
        };

    };
};
