
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse_settings.h>

/*          35 KEY MATRIX / LAYOUT MAPPING
// | 0  | 1  | 2  | 3  | 4  |       | 5  | 6  | 7  | 8  | 9 |
// | 10 | 11 | 12 | 13 | 14 |       | 15 | 16 | 17 | 18 | 19 |
// | 20 | 21 | 22 | 23 | 24 |       | 25 | 26 | 27 | 28 | 29 |
//            | 30 | 31 | 32 |     | 33 | 34 | 35 |
*/

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  // left-hand keys
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29  // right-hand keys
#define THUMBS 30 31 32 33 34 35                        // thumb keys

#define DEFAULT 0
#define NAV     1
#define OTH     2
#define NUM     3
#define FLP     4

#define MOUSE_SET 11

// Enable Mouse Keys
#include "includes/mouse_keys.dtsi"

#define TAPPING_TERM 200
#define QUICK_TAP    100

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    timeout-ms = <25>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

  &caps_word {
    continue-list = <UNDERSCORE MINUS SPACE SINGLE_QUOTE DOUBLE_QUOTES EXCLAMATION QUESTION BACKSPACE EQUAL>;
};

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};



/ {

    combos {
                compatible = "zmk,combos";

                /* Additional Nav */  
                COMBO(flip, &mo 4, 31 32, DEFAULT)               
        };
};

/ {
    macros {
      ZMK_MACRO(OPEN_SCRIPT,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings 
                = <&macro_press &kp LALT>
                , <&macro_tap &kp F2>
                , <&macro_release &kp LALT>
                ;
                )	
      ZMK_MACRO(SIGN_SCRIPT,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
                = <&macro_tap &kp PG_DN &kp PG_DN &kp PG_DN &kp PG_DN &kp PG_DN &kp PG_DN &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP>
                ;
                )
      ZMK_MACRO(LOGIN,
        wait-ms = <10>;
        tap-ms = <10>;
        bindings 
                = <&macro_tap &kp EXCL>
                , <&macro_press &kp LSHFT> 
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp A &kp M &kp S &kp U &kp N &kp G &kp N0 &kp N1>
                ;
                )
      ZMK_MACRO(CLOSE_FILE,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings 
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp F4>
                , <&macro_release &kp LCTRL>	
                , <&macro_tap &kp ENTER>
                ;
                )
       };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

         hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

   

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp APOS     &kp COMMA     &kp DOT       &kp P         &kp Y              &kp F        &kp G         &kp C         &kp R         &kp L
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &hm LGUI A   &hml LALT O   &hml LCTRL E  &hml LSHFT U  &kp I              &kp D        &hmr RSHFT H  &hmr RCTRL T  &hmr RALT N   &hmr RGUI S
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp SEMI     &hm LGUI Q    &hml LALT J   &hml LCTRL K  &hml LSHFT X       &hmr RSHFT B &hmr RCTRL M  &hmr RALT W   &hmr RGUI V   &kp Z
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &lt OTH TAB  &lt NAV ENTER       &lt NUM SPACE                       &kp SPACE          &sys_reset    &lt OTH TAB 
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "Navigation";

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp BSPC    &none         &kp F3        &kp ESC       &none                &none      &kp F1     &kp F2     &kp F3     &kp F10
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp LEFT    &kp RIGHT     &kp UP        &kp DOWN      &none                &none      &kp F4     &kp F5     &kp F6     &kp F11
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp HOME    &kp END       &kp PG_UP     &kp PG_DN     &none                &none      &kp F7     &kp F8     &kp F9     &kp F12
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &trans        &trans        &trans                            &kp EQUAL                &trans        &trans
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
               >;
        };

        oth_layer {
            label = "Other";

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp LC(C)    &kp LC(V)     &kp LC(Z)     &kp LC(Y)    &sys_reset          &none       &none         &none          &bootloader   &sys_reset 
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp LA(F2)     &kp LC(P)   &kp ENTER     &SIGN_SCRIPT  &kp LA(S)          &none       &none         &none          &LOGIN        &none 
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &CLOSE_FILE   &kp LC(T)   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &none       &none 
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &trans        &trans        &trans                            &trans                    &trans     &trans
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
                >; 
        };

        number_layer {
            label = "Number";

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp DEL      &kp N1        &kp N2        &kp N3       &kp MINUS           &kp PLUS    &kp EXCL      &kp AT_SIGN   &kp NON_US_BSLH  &kp QMARK 
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp N0       &kp N4        &kp N5        &kp N6       &kp SLASH           &kp STAR    &kp AMPS      &kp PRCNT     &kp CARET        &kp LS(NON_US_HASH) 
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp DOT      &kp N7        &kp N8        &kp N9       &kp UNDER           &kp EQUAL   &kp RBRC      &kp LBKT      &kp RBKT         &kp NON_US_HASH 
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &kp LPAR       &kp RPAR        &trans                            &trans                    &kp LBRC     &kp RBRC
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
            >;
        };

        flip_layer {
            label = "Flip";

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            bindings = <
//╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭────────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &kp L          &kp R         &kp C           &kp G        &kp F         &kp Y          &kp P         &kp DOT        &kp COMMA    &kp APOS
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp S          &kp N         &kp T           &kp H        &kp D         &kp I          &kp U         &kp E          &kp O       &kp A
//├────────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├────────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &kp Z          &kp V         &kp W           &kp M        &kp B         &kp X          &kp K         &kp J          &kp Q       &kp SEMI
//╰────────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰────────────┼─────────────┼─────────────┼─────────────┼──────────╯
                 &kp LPAR       &kp RPAR        &trans                            &trans                    &trans     &trans
 //            ╰─────────────┴─────────────┴────────────────────────╯       ╰──────────────────────────┴─────────────┴─────────────╯
            >;
        };
    };
};
